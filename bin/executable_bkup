#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
if [[ "${TRACE-0}" == "1" ]]; then
    set -o xtrace
fi

if [[ "${1-}" =~ ^-*h(elp)?$ ]]; then
    echo 'Usage: bkup [dirs_file]

Backup directories listed in dirs_file to tarsnap.
Each directory should be on its own line in the file.
If dirs_file is not specified, defaults to bkup.dirs in the same directory as this script.

Example dirs_file contents:
    ~/Documents
    ~/Photos
    ~/Projects
'
    exit
fi

cd "$(dirname "$0")"

main() {
    # Find tarsnap in common Homebrew locations
    local tarsnap_path
    for prefix in /opt/homebrew /usr/local /home/linuxbrew/.linuxbrew; do
        if [[ -x "${prefix}/bin/tarsnap" ]]; then
            tarsnap_path="${prefix}/bin/tarsnap"
            break
        fi
    done

    if [[ -z "${tarsnap_path:-}" ]]; then
        echo "Error: tarsnap not found in any Homebrew location"
        exit 1
    fi

    # Set default dirs file if not provided
    local dirs_file="${1:-bkup.dirs}"

    if [[ ! -f "$dirs_file" ]]; then
        echo "Error: Dirs file '$dirs_file' does not exist"
        exit 1
    fi

    # Read directories from file
    local dirs=()
    while IFS= read -r dir || [[ -n "$dir" ]]; do
        # Skip empty lines and comments
        [[ -z "$dir" || "$dir" =~ ^[[:space:]]*# ]] && continue
        dirs+=("$dir")
    done < "$dirs_file"

    if [[ ${#dirs[@]} -eq 0 ]]; then
        echo "Error: No valid directories found in '$dirs_file'"
        exit 1
    fi

    # Validate all directories exist
    local missing_dirs=()
    for dir in "${dirs[@]}"; do
        if [[ ! -e "$dir" ]]; then
            missing_dirs+=("$dir")
        fi
    done

    if [[ ${#missing_dirs[@]} -gt 0 ]]; then
        echo "Error: The following directories do not exist:"
        printf '%s\n' "${missing_dirs[@]}"
        exit 1
    fi

    echo "Backing up directories from $dirs_file:" >&2
    printf '%s\n' "${dirs[@]}" >&2

    # Set up archive name
    computer=$(hostname | cut -d. -f1)
    now=$(date +%Y-%m-%d_%H-%M-%S)
    name=${computer}-${now}

    # Create an archive
    "${tarsnap_path}" -c \
        --print-stats \
        --humanize-numbers \
        -f "${name}" \
        "${dirs[@]}"

    #keep the most recent archives
    "${tarsnap_path}" --list-archives | sort -r | tail -n +66 | xargs -n 1 "${tarsnap_path}" -d -f
}

main "$@"
