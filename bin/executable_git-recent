#!/usr/bin/env bash

# Source: https://gist.github.com/jordan-brough/48e2803c0ffa6dc2e0bd

# Download this script as "git-recent" (no extension), chmod it to be executable and put it in your
# path somewhere (e.g. /usr/bin). You can then use it via `git recent` from inside any git repo.

# Examples:

# Interactive prompt for most recent 4 branches:
#   $ git recent -n 5
#   1) master  4) deleted-branch
#   2) stable  5) improve-everything
#   3) fun
#   Choose a branch: 2

# List mode (non-interactive):
#   $ git recent -n 5 -l
#   master
#   stable
#   fun
#   deleted-branch
#   improve-everything

# Verify branch existence:
#   $ git recent -n 5 -l -e
#   master
#   stable
#   fun
#   improve-everything
#   something-else
#   # (notice "deleted-branch" removed from results)

# Contributors:
#   - jordan-brough
#   - fritz-c

usage()
{
  echo "usage: git recent [-n lines] [-l] [-e]"
}

while getopts "hn:le" opt; do
  case $opt in
    h) # help
      usage
      exit 1
      ;;
    n) # number of results
      NUM=$OPTARG
      ;;
    l) # list mode (non-interactive)
      INTERACTIVE=0
      ;;
    e) # validate existence
      CHECK_EXISTENCE=1
      ;;
    \?)
      usage
      exit 1
      ;;
  esac
done

NUM=${NUM-10} # default to 10 lines
INTERACTIVE=${INTERACTIVE-1} # default to interactive
CHECK_EXISTENCE=${CHECK_EXISTENCE-0} # default to *not* checking existence (faster)

BRANCHES=$(git reflog |
  grep -E -io "moving from ([^[:space:]]+) to ([^[:space:]]+)" |
  awk '{ print $5 }' | # extract 5th column
  awk ' !x[$0]++' | # Removes duplicates.  See http://stackoverflow.com/questions/11532157
  grep -E -v '^[a-f0-9]{40}$' | # remove hash results
  while read -r line; do # verify existence
    ([[ $CHECK_EXISTENCE = '0' ]] || git rev-parse --verify "$line" &>/dev/null) && echo "$line"
  done |
  head -n "$NUM"
)

if [[ $INTERACTIVE = '1' ]]; then
  d=$(echo "$BRANCHES" | tr ' ' '\n' | fzf)
  if [[ -n "$d" ]]; then
    git checkout "$d"
  fi
else
    echo "$BRANCHES"
fi
