#!/usr/bin/env zsh

set -o errexit
set -o nounset
set -o pipefail

if [[ "${1-}" =~ ^-*h(elp)?$ ]]; then
    echo 'Usage: notify [-t title] [-s sound] [-u urgency] message

Send desktop notifications across platforms.

Options:
    -t, --title TITLE      Notification title (default: "Notification")
    -s, --sound SOUND      Sound to play (default: none, "error" for error sound)
    -u, --urgency LEVEL    Urgency level: low, normal, critical (Linux only)
    -h, --help             Show this help

Examples:
    notify "Backup completed"
    notify -t "Build Failed" -s error "Tests failed in module X"
    notify -t "Deploy" -u critical "Production deployment failed"
'
    exit
fi

# Default values
title="Notification"
sound=""
urgency="normal"
message=""

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -t|--title)
            title="$2"
            shift 2
            ;;
        -s|--sound)
            sound="$2"
            shift 2
            ;;
        -u|--urgency)
            urgency="$2"
            shift 2
            ;;
        -*)
            echo "Unknown option: $1" >&2
            exit 1
            ;;
        *)
            message="$1"
            shift
            ;;
    esac
done

if [[ -z "$message" ]]; then
    echo "Error: Message is required" >&2
    exit 1
fi

# Set sound based on shortcuts
case "$sound" in
    "error"|"fail"|"failure")
        if type -P osascript >/dev/null 2>&1; then
            sound="Basso"
        else
            sound=""  # Linux doesn't have consistent error sounds
        fi
        ;;
    "success"|"complete"|"done")
        if type -P osascript >/dev/null 2>&1; then
            sound="Glass"
        else
            sound=""
        fi
        ;;
esac

# Send notification based on available tools
if type -P osascript >/dev/null 2>&1; then
    # macOS native notifications
    cmd="display notification \"$message\" with title \"$title\""
    if [[ -n "$sound" ]]; then
        cmd="$cmd sound name \"$sound\""
    fi
    osascript -e "$cmd"
elif type -P terminal-notifier >/dev/null 2>&1; then
    # macOS with terminal-notifier (Homebrew)
    args=(-title "$title" -message "$message")
    if [[ -n "$sound" ]]; then
        args+=(-sound "$sound")
    fi
    terminal-notifier "${args[@]}"
elif type -P notify-send >/dev/null 2>&1; then
    # Linux notifications
    args=()
    case "$urgency" in
        "low"|"normal"|"critical")
            args+=(-u "$urgency")
            ;;
    esac
    notify-send "${args[@]}" "$title" "$message"
else
    # Fallback: just echo to stderr
    echo "[$title] $message" >&2
fi