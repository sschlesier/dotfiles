#! /usr/bin/env bash

environments=("dev" "staging" "demo" "production")
urls=("test1" "api.staging" "api.demo2" "api")

cmds=("echo rapi")
for i in "${!environments[@]}"; do
  cmd="printf \"%s \" ${environments[$i]}; curl -s \"https://${urls[$i]}.readytopay.co/ping\" | jq -r .ApplicationVersion"
  cmds+=("$cmd")
done

cmds+=('echo -e "\n\ndapi"')
for i in "${!environments[@]}"; do
  cmd="printf \"%s \" ${environments[$i]}; curl -s \"https://${urls[$i]}.readytopay.co/dashboard/ping\" | jq -r .ApplicationVersion"
  cmds+=("$cmd")
done

cmds+=('echo -e "\n\nfrapi"')
for i in "${!environments[@]}"; do
  if [[ ${environments[$i]} == "demo" ]]
  then
    continue
  fi
  cmd="printf \"%s \" ${environments[$i]}; curl -s \"https://${urls[$i]}.readytopay.co/frapi/ping\" | jq -r .ApplicationVersion"
  cmds+=("$cmd")
done

cmds+=('echo -e "\n\ndui"')
urls=("ready-dashboard-dev.herokuapp.com" "ready-dashboard-staging.herokuapp.com" "ready-dashboard-demo.herokuapp.com" "admin.readypay.co")
for i in "${!environments[@]}"; do
  cmd="printf \"%s \" ${environments[$i]}; curl -s \"https://${urls[$i]}/ping.json\" | jq -r .ApplicationVersion"
  cmds+=("$cmd")
done

cmds+=('echo -e "\n\nrma"')
urls=("test1.readydemo.co" "staging1.readydemo.co" "readydemo.co" "readypay.co")
for i in "${!environments[@]}"; do
  cmd="printf \"%s \" ${environments[$i]}; curl -s \"https://${urls[$i]}/ping.json\" | jq -r .ApplicationVersion"
  cmds+=("$cmd")
done

environments=("dev" "staging" "production")
cmds+=('echo -e "\n\nsell-sheet-parser"')
urls=("test1" "api.staging" "api")
for i in "${!environments[@]}"; do
  cmd="printf \"%s \" ${environments[$i]}; curl -s \"https://${urls[$i]}.readytopay.co/sell-sheet/health\" | jq -r .version"
  cmds+=("$cmd")
done

cmds+=('echo -e "\n\npost-metric lambda"')
cmd="printf 'prod '; aws --region ca-central-1 lambda invoke \
  --function-name post-metrics-Function-JQwkOV9M3BPp \
  --cli-binary-format raw-in-base64-out \
  --payload '{\"ping\": 1}' post-metric.json > /dev/null && jq -r '.appVersion' post-metric.json && rm post-metric.json"
cmds+=("$cmd")

cmds+=('echo -e "\n\ninvoice anomaly detection lambda"')
cmd="printf 'prod '; aws --region ca-central-1 lambda invoke \
  --function-name invoice-anomaly-detection-Function-BVrJFsOZ2oKr \
  --cli-binary-format raw-in-base64-out \
  --payload '{\"ping\": 1}' anomaly.json > /dev/null && jq -r '.appVersion' anomaly.json && rm anomaly.json"
cmds+=("$cmd")


parallel -j 200% -k ::: "${cmds[@]}"
