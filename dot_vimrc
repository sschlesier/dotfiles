set nocompatible
filetype off

" fuzzy finder
set rtp+=$FZF_HOME

" Plugins will be downloaded under the specified directory.
call plug#begin('~/.vim/plugged')

" Declare the list of plugins.
Plug 'NLKNguyen/papercolor-theme'
Plug 'airblade/vim-gitgutter'
Plug 'aklt/plantuml-syntax'
Plug 'blueyed/vim-diminactive'
Plug 'bronson/vim-trailing-whitespace'
Plug 'editorconfig/editorconfig-vim'
Plug 'gruvbox-community/gruvbox'
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'vim-airline/vim-airline'

" List ends here. Plugins become visible to Vim after this call.
call plug#end()

" Set leader shortcut to a comma ','. By default it's the backslash
let mapleader = " "

""""""""""""""""""""""
"      Settings      "
""""""""""""""""""""""
set nocompatible                " Enables us Vim specific features
filetype off                    " Reset filetype detection first ...
filetype plugin indent on       " ... and enable filetype detection
if has("nvim") == 0
	set ttyfast                     " Indicate fast terminal conn for faster redraw
	set ttymouse=xterm2             " Indicate terminal type for mouse codes
	set ttyscroll=3                 " Speedup scrolling
endif
set laststatus=2                " Show status line always
set encoding=utf-8              " Set default encoding to UTF-8
set autoread                    " Automatically read changed files
set autoindent                  " Enabile Autoindent
set backspace=indent,eol,start  " Makes backspace key more powerful.
set incsearch                   " Shows the match while typing
set hlsearch                    " Highlight found searches
set noerrorbells                " No beeps
set nonumber norelativenumber   " Show line numbers
set showcmd                     " Show me what I'm typing
set noswapfile                  " Don't use swapfile
set nobackup                    " Don't create annoying backup files
set splitright                  " Vertical windows should be split to right
set splitbelow                  " Horizontal windows should split to bottom
set autowrite                   " Automatically save before :next, :make etc.
set hidden                      " Buffer should still exist if window is closed
set fileformats=unix,dos,mac    " Prefer Unix over Windows over OS 9 formats
set noshowmatch                 " Do not show matching brackets by flickering
set noshowmode                  " We show the mode with airline or lightline
set ignorecase                  " Search case insensitive...
set smartcase                   " ... but not it begins with upper case
set completeopt=menu,menuone    " Show popup menu, even if there is one entry
set pumheight=10                " Completion window max size
set nocursorcolumn              " Do not highlight column (speeds up highlighting)
set nocursorline                " highlight cursor line
set lazyredraw                  " Wait to redraw
set inccommand=nosplit          " show previews inline
set nomodeline                  " disable mode line I don't use and it has vulnerability
set scrolloff=10                " minimum 10 lines around cursor when jumping

" visible whitespace
set listchars=eol:¬,tab:>·,trail:~,extends:>,precedes:<,space:␣
set list                        " show whitespace

" This enables us to undo files even if you exit Vim.
if has('persistent_undo')
  set undofile
  set undodir=~/.config/vim/tmp/undo//
endif

" Colorscheme
syntax enable
if $ITERM_PROFILE =~# "-light$"
  set background=light
  try
    colorscheme PaperColor
    catch
  endtry
else
  set background=dark
  try
    colorscheme gruvbox
    catch
  endtry
endif

" allow tmux dimming to affect vim
" highlight Normal ctermbg=NONE ctermfg=NONE

"highlight active split by enabling syntax higlighting
let g:diminactive_use_syntax = 0
let g:diminactive_use_colorcolumn = 1

"  """"""""""""""""""""""
"  Mappings      "
"  """"""""""""""""""""""
"<C-s> to save
noremap <silent> <C-s> :update<CR>
vnoremap <silent> <C-s> <C-C>:update<CR>
inoremap <silent> <C-s> <Esc>:update<CR>

" clear search highlights
map <leader>l :nohlsearch<CR>

"q to quit buffer
map <leader>q :q<CR>

"split motions to simple <C-h|j|k|l>
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-h> <C-w>h
map <C-l> <C-w>l

" allow the . to execute once for each line of a visual selection
vnoremap . :normal .<CR>

"toggle whitespace
nnoremap <leader>w :set list!<CR>

""Move up and down by displayed lines (e.g. don't skip through a wrapped line)
noremap <Up> gk
noremap <Down> gj
noremap j gj
noremap k gk

" Act like D and C
nnoremap Y y$

" repeat macro
nnoremap Q @@

" vim window motions
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" run the current line as a command
nnoremap <leader>e :exe getline(line('.'))<cr>

" reduce updatetime for prompt git gutter
set updatetime=250

" allow the . to execute once for each line of a visual selection
vnoremap . :normal .<CR>

" double leader to enter ex mode
nnoremap <silent> <leader><leader> :
vnoremap <silent> <leader><leader> :

" fzf mappings
nnoremap <silent> <leader>o :Files<CR>
nnoremap <silent> <leader>O :Files!<CR>
cnoremap <silent> <C-p> :History:<CR>
cnoremap <silent> <C-_> <ESC>:History/<CR>
nnoremap <silent> <leader>y :History<CR>
nnoremap <silent> <leader>b :Buffers<CR>
nnoremap <silent> <leader>` :Marks<CR>
nnoremap <silent> <leader>L :BLines<CR>
nnoremap <silent> <F1> :Helptags<CR>
inoremap <silent> <F1> <ESC>:Helptags<CR>
noremap <silent> <leader>; :Commands<CR>
inoremap <silent> <F3> <ESC>:Snippets<CR>
nnoremap <silent> <leader>f :Ag<CR>

" Fugitive Conflict Resolution
nnoremap <leader>gd :Gvdiff<CR>
nnoremap gdh :diffget //2<CR>
nnoremap gdl :diffget //3<CR>
