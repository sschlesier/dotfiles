# zmodload zsh/zprof

#oh-my-zsh from antibody cache
export ZSH="$(antibody home)/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh"

#update plugins when out of date
if [[ ! -e "$HOME/.zsh_plugins.sh" || "$HOME/.zsh_plugins.sh" -ot "$HOME/.zsh_plugins.txt" ]]; then
  echo updating bundles...
  antibody bundle < "$HOME/.zsh_plugins.txt" > "$HOME/.zsh_plugins.sh"
fi
source "$HOME/.zsh_plugins.sh"

#user for theme to know when to display alternate username
DEFAULT_USER="{{ .chezmoi.username }}"

#add'l git tools
#alias gt='git tree --color=always | head -n$(($LINES - 4)) | color-cut $COLUMNS'
alias gt='git tree --color=always | head -n$(($LINES - 4))'
alias gta='git tree --all'
unalias grv #expose the git repo viewer tool

#set ls colors
{{- if eq .chezmoi.os "linux" }}
eval "$(dircolors $HOME/.dircolors.256dark)"
{{- end }}
{{- if eq .chezmoi.os "darwin" }}
export CLICOLOR=1
#find LSCOLORS
{{- end }}

export EDITOR=nvim
export LESS=-RFMX
alias vim=nvim

#define paths for windows file system access
if [[ -d /mnt/c ]]; then
  export C_ROOT=/mnt/c
fi
if [[ -d $C_ROOT/Users/Scott.Schlesier ]]; then
  export WIN_HOME=$C_ROOT/Users/Scott.Schlesier
  alias wh="cd $WIN_HOME"
fi
if [[ -d $C_ROOT/Program\ Files ]]; then
  export PRG_FILES=$C_ROOT/Program\ Files
fi

#include /bin on path
if [[ -e "$HOME/bin" ]]; then
  PATH+=:"$HOME/bin"
  alias llb="ls -l $HOME/bin"
fi

#include /winbin on path
if [[ -e "$HOME/winbin" ]]; then
  PATH+=:"$HOME/winbin"
  alias llw="ls -l $HOME/winbin"
fi

if [[ -n $C_ROOT ]]; then
  #remove windows folders
  PATH=$(echo $PATH | tr ':' '\n' | grep -v $C_ROOT | tr '\n' ':')
  #strip trailing :
  PATH=${PATH%:}
  export PATH
fi

#de-duplicate path
typeset -aU path

#disable tty XON/XOFF via ^S, ^Q
stty -ixon

DISABLE_AUTO_TITLE="true"
COMPLETION_WAITING_DOTS="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"

#omit l and git status from history
HISTIGNORE='l:gst: '

{{- if ne .term "" }}
#set TERM
export TERM={{ .term }}
{{- end }}

{{- if eq .email "scotts@iqmetrix.com" }}
#begin work machine specific items

# project folder aliases
source ~/.project-aliases

#end work machine specific items
{{- end }}

#make directory and cd to it
mcd() {
  mkdir "$1"
  cd "$1"
}
export mcd

#make director w/ current date
mdd() {
  mcd $(date '+%Y-%m-%d')
}
export mdd

#open the current folder in explorer
b() {
	open_command .
}
export b

{{- if eq .launch_tmux "true" }}
#launch tmux or attach to existing session
if [[ -z "$TMUX" ]]; then
  tmux attach 2>/dev/null || exec tmux new
fi
{{- end }}

{{- if eq .insecure_docker "true" }}
export DOCKER_HOST=tcp://127.0.0.1:2375
{{- end }}


#customise POWERLEVEL_10K Theme
#stole the basics from .purepower by the p10k guy
typeset -ga POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(
dir_writable dir vcs)

typeset -ga POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(
status command_execution_time background_jobs context)

local ins='❯'
local cmd='❮'
if (( ${PURE_POWER_USE_P10K_EXTENSIONS:-1} )); then
local p="\${\${\${KEYMAP:-0}:#vicmd}:+${${ins//\\/\\\\}//\}/\\\}}}"
p+="\${\${\$((!\${#\${KEYMAP:-0}:#vicmd})):#0}:+${${cmd//\\/\\\\}//\}/\\\}}}"
else
p=$ins
fi
local ok="%F{076}${p}%f"
local err="%F{196}${p}%f"

typeset -g POWERLEVEL9K_PROMPT_ON_NEWLINE=true
typeset -g POWERLEVEL9K_RPROMPT_ON_NEWLINE=false
typeset -g POWERLEVEL9K_PROMPT_ADD_NEWLINE=true
typeset -g POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=
typeset -g POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%(?.$ok.$err) "

if [[ -z $TMUX ]]; then
  cd $HOME
fi
